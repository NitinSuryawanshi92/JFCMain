buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
        classpath("cz.habarta.typescript-generator:typescript-generator-gradle-plugin:2.1.410")
    }
}
//plugins {
//	id 'org.springframework.boot' version '2.2.0.M4'
//	id 'java'
//	id 'war'
//}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'cz.habarta.typescript-generator'
apply plugin: 'war'

group = 'jfc'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


generateTypeScript {
	jsonLibrary = 'jackson2'
    classPatterns = [
        'com.jfc.jfcsms.model.*'
    ]
    outputFile = '../jfc-app/src/app/interfaces/tsJavaModule.d.ts'
    outputKind = 'global'
    namespace = 'Jfc';   
}

repositories {
	mavenCentral()
	jcenter()
	}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	 compile('org.springframework.boot:spring-boot-starter-web','org.apache.tomcat.embed:tomcat-embed-jasper'
	,'javax.servlet:jstl')
	 testCompile("junit:junit")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:2.0.0.RELEASE")   
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'
	 testCompile('org.springframework.boot:spring-boot-starter-test')
	//testImplementation('org.springframework.boot:spring-boot-starter-test') {
	//	exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	//	exclude group: 'junit', module: 'junit'
	//}
	compile("log4j:log4j:1.2.17")
	compile group: 'com.cronutils', name: 'cron-utils', version: '7.0.0'
	
}
configurations {
    runtime.exclude module: 'tomcat-embed-core'
    runtime.exclude module: 'tomcat-embed-el'
    runtime.exclude module: 'tomcat-embed-jasper'
    runtime.exclude module: 'tomcat-embed-websocket'
}

// build.dependsOn(flywayMigrate)
build.dependsOn(generateTypeScript)
//test {
//	useJUnitPlatform()
//}
